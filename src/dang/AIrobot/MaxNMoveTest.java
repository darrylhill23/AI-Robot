package dang.AIrobot;

import junit.framework.TestCase;

/**
 * The class <code>MaxNMoveTest</code> contains tests for the class {@link
 * <code>MaxNMove</code>}
 *
 * @pattern JUnit Test Case
 *
 * @generatedBy CodePro at 09/12/12 10:20 PM
 *
 * @author darrylhill
 *
 * @version $Revision$
 */
public class MaxNMoveTest extends TestCase {

	/**
	 * Construct new test instance
	 *
	 * @param name the test name
	 */
	public MaxNMoveTest(String name) {
		super(name);
	}

	
	/**
	 * Run the Point getMaxPlayerMapPose() method test
	 */
	public void testGetMaxPlayerMapPose() {
		fail("Newly generated method - fix or disable");
		// add test code here
		// This class does not have a public, no argument constructor,
		// so the getMaxPlayerMapPose() method can not be tested
		assertTrue(false);
	}

	/**
	 * Run the int getMaxPlayer() method test
	 */
	public void testGetMaxPlayer() {
		fail("Newly generated method - fix or disable");
		// add test code here
		// This class does not have a public, no argument constructor,
		// so the getMaxPlayer() method can not be tested
		assertTrue(false);
	}

	/**
	 * Run the void setMaxPlayer(int) method test
	 */
	public void testSetMaxPlayer() {
		fail("Newly generated method - fix or disable");
		// add test code here
		int maxPlayer = 0;
		// This class does not have a public, no argument constructor,
		// so the setMaxPlayer() method can not be tested
		assertTrue(false);
	}

	/**
	 * Run the double[] getScores() method test
	 */
	public void testGetScores() {
		fail("Newly generated method - fix or disable");
		// add test code here
		// This class does not have a public, no argument constructor,
		// so the getScores() method can not be tested
		assertTrue(false);
	}

	/**
	 * Run the void setScore(double, int) method test
	 */
	public void testSetScore() {
		fail("Newly generated method - fix or disable");
		// add test code here
		double score = 0.0;
		int index = 0;
		// This class does not have a public, no argument constructor,
		// so the setScore() method can not be tested
		assertTrue(false);
	}

	/**
	 * Run the void setScores(double[]) method test
	 */
	public void testSetScores() {
		fail("Newly generated method - fix or disable");
		// add test code here
		double[] scores = null;
		// This class does not have a public, no argument constructor,
		// so the setScores() method can not be tested
		assertTrue(false);
	}

	/**
	 * Run the void propagatedValues(double[]) method test
	 */
	public void testPropagatedValues() {
		fail("Newly generated method - fix or disable");
		// add test code here
		double[] scores = null;
		// This class does not have a public, no argument constructor,
		// so the propagatedValues() method can not be tested
		assertTrue(false);
	}

	/**
	 * Run the void calculateValue() method test
	 */
	public void testCalculateValue() {
		fail("Newly generated method - fix or disable");
		// add test code here
		// This class does not have a public, no argument constructor,
		// so the calculateValue() method can not be tested
		assertTrue(false);
	}
}

/*$CPS$ This comment was generated by CodePro. Do not edit it.
 * patternId = com.instantiations.assist.eclipse.pattern.testCasePattern
 * strategyId = com.instantiations.assist.eclipse.pattern.testCasePattern.junitTestCase
 * additionalTestNames = 
 * assertTrue = false
 * callTestMethod = true
 * createMain = false
 * createSetUp = false
 * createTearDown = false
 * createTestFixture = false
 * createTestStubs = true
 * methods = 
 * package = dang.AIrobot
 * package.sourceFolder = AIRobot/src
 * superclassType = junit.framework.TestCase
 * testCase = MaxNMoveTest
 * testClassType = dang.AIrobot.MaxNMove
 */